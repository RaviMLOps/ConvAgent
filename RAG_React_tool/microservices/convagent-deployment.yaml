apiVersion: v1
kind: Namespace
metadata:
  name: convagent
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: aiops-common-config
  namespace: convagent
data:
  OPENAI_MODEL_NAME: "gpt-4o"
  OPENAI_TEMPERATURE: "0"
  SQL_TOOL_URL: "http://cancel-service:8003/query"
  RAG_TOOL_URL: "http://rag-service:8002/search"
  SCHEDULE_SERVICE_URL: "http://schedule-service:8001/query"
  AGENT_SERVICE_URL: "http://agent-service:8004/react-agent"
  CHROMA_QUERY_ENDPOINT: "http://chroma-service:8000/chroma/query"
  CHROMA_SERVER_HOST: "http://chroma-service:8000"
  CHROMA_STATUS_ENDPOINT: "http://chroma-service:8000/chroma/status"
  PG_HOST: "172.31.17.57"
  PG_PORT: "5432"
  PG_DB: "Flight_reservation"
  PG_USER: "postgres"
---
apiVersion: v1
kind: Secret
metadata:
  name: aiops-common-secret
  namespace: convagent
type: Opaque
stringData:
  PG_PASSWORD: "mlcohort@4"
  OPENAI_API_KEY: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chroma-service
  namespace: convagent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chroma-service
  template:
    metadata:
      labels:
        app: chroma-service
    spec:
      containers:
      - name: chroma-service
        image: chroma-local:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8000
        volumeMounts:
        # Mount the entire container/ folder as /app for code hot-reload
        - name: app-code
          mountPath: /app
        # Mount only the documents folder as /app/data (PDF input)
        - name: pdf-data
          mountPath: /app/data
      volumes:
      # For code hot-reload
      - name: app-code
        hostPath:
          path: /home/docker/langchain-k8s/chroma/container
          type: Directory
      # For PDF document ingestion
      - name: pdf-data
        hostPath:
          path: /home/docker/langchain-k8s/chroma/container/documents
          type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: chroma-service
  namespace: convagent
spec:
  selector:
    app: chroma-service
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rag-service
  namespace: convagent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rag-service
  template:
    metadata:
      labels:
        app: rag-service
    spec:
      containers:
      - name: rag-service
        image: rag-service:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8002
        envFrom:
        - configMapRef:
            name: aiops-common-config
        - secretRef:
            name: aiops-common-secret
---
apiVersion: v1
kind: Service
metadata:
  name: rag-service
  namespace: convagent
spec:
  selector:
    app: rag-service
  ports:
  - protocol: TCP
    port: 8002
    targetPort: 8002
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: schedule-service
  namespace: convagent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: schedule-service
  template:
    metadata:
      labels:
        app: schedule-service
    spec:
      containers:
      - name: schedule-service
        image: schedule-service:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8001
        envFrom:
        - configMapRef:
            name: aiops-common-config
        - secretRef:
            name: aiops-common-secret
---
apiVersion: v1
kind: Service
metadata:
  name: schedule-service
  namespace: convagent
spec:
  selector:
    app: schedule-service
  ports:
  - protocol: TCP
    port: 8001
    targetPort: 8001
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cancel-service
  namespace: convagent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cancel-service
  template:
    metadata:
      labels:
        app: cancel-service
    spec:
      containers:
      - name: cancel-service
        image: cancel-service:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8003
        envFrom:
        - configMapRef:
            name: aiops-common-config
        - secretRef:
            name: aiops-common-secret
---
apiVersion: v1
kind: Service
metadata:
  name: cancel-service
  namespace: convagent
spec:
  selector:
    app: cancel-service
  ports:
  - protocol: TCP
    port: 8003
    targetPort: 8003
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent-service
  namespace: convagent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agent-service
  template:
    metadata:
      labels:
        app: agent-service
    spec:
      containers:
      - name: agent-service
        image: agent-service:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8004
        envFrom:
        - configMapRef:
            name: aiops-common-config
        - secretRef:
            name: aiops-common-secret
---
apiVersion: v1
kind: Service
metadata:
  name: agent-service
  namespace: convagent
spec:
  selector:
    app: agent-service
  ports:
  - protocol: TCP
    port: 8004
    targetPort: 8004
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flight-frontend
  namespace: convagent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flight-frontend
  template:
    metadata:
      labels:
        app: flight-frontend
    spec:
      containers:
      - name: flight-frontend
        image: flight-frontend:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 7860
        env:
        - name: AGENT_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: aiops-common-config
              key: AGENT_SERVICE_URL
---
apiVersion: v1
kind: Service
metadata:
  name: flight-frontend
  namespace: convagent
spec:
  selector:
    app: flight-frontend
  ports:
  - protocol: TCP
    port: 7860
    targetPort: 7860
  type: NodePort
